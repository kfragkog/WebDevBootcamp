{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww7760\viewh15700\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f0\b\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
1 - Introduction to this Course\
2 - Introduction to Front End Development 
\b0 \
 - the internet: url -> IP address -> HTTP request asking for content -> the servers job is to figure out what the request wants, what to send back -> the browser gets the response back in HTML, CSS, JS and displays content\
- all the logic is in the Back End, all the stuff we see and interact with is the Front End\
- dynamic vs static pages eg yelp vs restaurant page\
- HTML defines the structure of a webpage - the \'93nouns\'94/skeleton of a webpage - it\'92s mandatory\
- CSS defines the style of HTML - the \'93adjectives\'94/skin of a webpage\
- JS adds logic and interactivity to a webpage = the \'93verbs\'94/actions on a webpage\

\b 3 - Introduction to HTML\

\b0 HyperText Mark up Language - it allowed to create hyper links (1990)\
We 
\i tag
\i0  the content: <tagName> some content </tagName>\
MDN - resource for HTML, CSS, JS\
Every HTML doc will start with this boilerplate - \ul html + tab\ulnone :\

\i <!DOCTYPE html> - to define that page uses HTML5\
<html> - it\'92s html and we then need one head and one body\
<head> - metadata, everything \cf2 \cb3 not displayed in the browser\cf2 \cb3 \
	<title></title>\
</head>\
<body>\
\
</body>\
</html>
\i0 \
To add comment: <!-- text --> - \ul cmd + /\ulnone \
Title is important for linking to page or googling it etc\
h tag is a block element (gets its own line), not inline element like strong\
Ordered list has numbers, unordered has bullet points\
div - way of grouping things together (like a generic container) - \ul block\ulnone  level element\
span - generic container, but \ul inline\ulnone \
\
\
\
\cb1 \uc0\u8232 \cb3 4 - Intermediate HTML\cb1 \uc0\u8232 \cb3 5 - Introduction to CSS\cb1 \uc0\u8232 \cb3 6 - Intermediate CSS\cb1 \uc0\u8232 \cb3 7 - Bootstrap\cb1 \uc0\u8232 \cb3 8 - Introduction to JavaScript\cb1 \uc0\u8232 \cb3 9 - Javascript Basics: Control Flow\cb1 \uc0\u8232 \cb3 10 - Javascript Basics: Functions\cb1 \uc0\u8232 \cb3 11 - Javascript Basics: Arrays\cb1 \uc0\u8232 \cb3 12 - Javascript Basics: Objects\cb1 \uc0\u8232 \cb3 13 - DOM Manipulation\cb1 \uc0\u8232 \cb3 14 - Advanced DOM Manipulation\cb1 \uc0\u8232 \cb3 15 - Color Game Project\cb1 \uc0\u8232 \cb3 16 - Intro to jQuery\cb1 \uc0\u8232 \cb3 17 - Advanced jQuery\cb1 \uc0\u8232 \cb3 18 - Todo List Projects\cb1 \uc0\u8232 \cb3 19 - OPTIONAL Project: Patatap Clone 20 - Backend Basics\cb1 \uc0\u8232 \cb3 21 - The Command Line\cb1 \uc0\u8232 \cb3 22 - Node JS\cb1 \uc0\u8232 \cb3 23 - Server Side Frameworks\cb1 \uc0\u8232 \cb3 24 - Intermediate Express\cb1 \uc0\u8232 \cb3 25 - Working With API's\cb1 \uc0\u8232 \cb3 26 - YelpCamp: Basics\cb1 \uc0\u8232 \cb3 27 - Databases\cb1 \uc0\u8232 \cb3 28 - YelpCamp: Data Persistence\cb1 \uc0\u8232 \cb3 29 - RESTful Routing\cb1 \uc0\u8232 \cb3 30 - Data Associations\cb1 \uc0\u8232 \cb3 31 - YelpCamp: Comments\cb1 \uc0\u8232 \cb3 32 - Authentication\cb1 \uc0\u8232 \cb3 33 - YelpCamp: Adding Authentication\cb1 \uc0\u8232 \cb3 34 - YelpCamp: Cleaning Up\cb1 \uc0\u8232 \cb3 35 - YelpCamp: Update and Destroy\cb1 \uc0\u8232 \cb3 36 - YelpCamp: UI Improvements 
\f1\fs24 \cb1 \

\f0\fs29\fsmilli14667 \cb3 37 - Git and Github\cb1 \uc0\u8232 \cb3 38 - Deploying\cb1 \uc0\u8232 \cb3 39 - JavaScript: The Tricky Stuff 
\f1\fs24 \cb1 \
}